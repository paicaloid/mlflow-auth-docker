server {

        root /var/www/__SERVER_NAME__/html;
        index index.html index.htm index.nginx-debian.html;

        server_name __SERVER_NAME__ www.__SERVER_NAME__;

        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;

        location / {
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_connect_timeout 300;
                # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                chunked_transfer_encoding off;

                proxy_pass http://127.0.0.1:9000;
        }

        location /mlflow {
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                rewrite ^/mlflow/(.*) /$1 break;
                proxy_pass http://127.0.0.1:5000;
        }

        location /minio/ui {
                rewrite ^/minio/ui/(.*) /$1 break;
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-NginX-Proxy true;

                real_ip_header X-Real-IP;

                proxy_connect_timeout 300;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                chunked_transfer_encoding off;
                proxy_pass http://127.0.0.1:9001;
        }

    # ----> # managed by Certbot
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/__SERVER_NAME__/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/__SERVER_NAME__/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    # <---- # managed by Certbot

}
server {
    if ($host = __SERVER_NAME__) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;

        server_name __SERVER_NAME__ www.__SERVER_NAME__;

    return 404; # managed by Certbot


}